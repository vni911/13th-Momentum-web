name: Continuous Deployment

on:
  push: # main 브랜치에 push될 때 실행
    branches: ["develop"]

jobs:
  deploy:
    runs-on: ubuntu-latest # 우분투 최신 버전 환경에서 실행

    steps:
      # 코드 checkout
      - name: Checkout code
        uses: actions/checkout@v3

      # Node.js 설정
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18" # Vite + React 권장 Node 버전

      # 의존성 설치 및 빌드
      - name: Install dependencies and build

         
        env:
            VITE_WEATHER_API_KEY: ${{ secrets.WEATHER_API_KEY }}
            VITE_KAKAO_MAP_APP_KEY: ${{ secrets.KAKAO_MAP_APP_KEY }}
            VITE_HUGGINGFACE_API_KEY: ${{ secrets.HUGGINGFACE_API_KEY }}
            VITE_PUBLIC_DATA_SERVICE_KEY: ${{ secrets.PUBLIC_DATA_SERVICE_KEY }}
            VITE_MAP_API_KEY: ${{ secrets.MAP_API_KEY }}
            VITE_API_BASE_URL: ${{ secrets.API_BASE_URL }}
            VITE_DEV_PROXY_URL: ${{ secrets.DEV_PROXY_URL }}

        run : |
          echo "VITE_WEATHER_API_KEY: ${{ secrets.WEATHER_API_KEY }}"
          echo "VITE_KAKAO_MAP_APP_KEY: ${{ secrets.KAKAO_MAP_APP_KEY }}"
          echo "VITE_HUGGINGFACE_API_KEY: ${{ secrets.HUGGINGFACE_API_KEY }}"
          echo "VITE_PUBLIC_DATA_SERVICE_KEY: ${{ secrets.PUBLIC_DATA_SERVICE_KEY }}"
          echo "VITE_MAP_API_KEY: ${{ secrets.MAP_API_KEY }}"
          echo "VITE_API_BASE_URL: ${{ secrets.API_BASE_URL }}"
          echo "VITE_DEV_PROXY_URL: ${{ secrets.DEV_PROXY_URL }}"
        
          npm install
          npm run build


      # 빌드 파일 전송 (배포 파일 업로드)
      - name: Copy build files
        uses: appleboy/scp-action@v0.1.6
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          port: ${{ secrets.SERVER_SSH_PORT }}
          key: ${{ secrets.SERVER_KEY }}
          source: dist/
          target: /home/ubuntu/13th-Momentum-web/



      # EC2 서버 설정 및 Nginx 재시
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          port: ${{ secrets.SERVER_SSH_PORT }}
          key: ${{ secrets.SERVER_KEY }}
          script: |
            sudo systemctl restart nginx